enum SeasonType {
  ALL
  "Regular Season"
  REG
  "Pre Season"
  PRE
  "Post Season"
  PST
}

type Season {
  id: ID!
  type: SeasonType!
  year: Int!
}

type PlayerSeasonConnection {
  edges: [PlayerSeasonEdge]
  nodes: [Season!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PlayerSeasonEdge {
  cursor: String!
  node: Season
}

type TeamSeasonEdge {
  node: Season
}

extend type Player {
  seasons(
    after: String
    before: String
    first: Int
    last: Int
    filterBy: SeasonType = REG
  ): PlayerSeasonConnection
}

extend type Team {
  season(year: Int!, type: SeasonType = REG): TeamSeasonEdge
}
